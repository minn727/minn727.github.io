

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://minn727.github.io/</id>
  <title>Minn</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2024-09-20T01:26:19+09:00</updated>
  <author>
    <name>Minho Choi</name>
    <uri>https://minn727.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://minn727.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="ko"
    href="https://minn727.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <rights> © 2024 Minho Choi </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>PCIe Express Technology 개요</title>
    <link href="https://minn727.github.io/posts/PCIe-Express-Technology-%EA%B0%9C%EC%9A%94/" rel="alternate" type="text/html" title="PCIe Express Technology 개요" />
    <published>2024-09-20T00:00:00+09:00</published>
  
    <updated>2024-09-20T01:25:56+09:00</updated>
  
    <id>https://minn727.github.io/posts/PCIe-Express-Technology-%EA%B0%9C%EC%9A%94/</id>
    <content src="https://minn727.github.io/posts/PCIe-Express-Technology-%EA%B0%9C%EC%9A%94/" />
    <author>
      <name>Minho Choi</name>
    </author>

  
    
    <category term="PCIe &amp; CXL" />
    
    <category term="PCIe" />
    
  

  <summary></summary>

  </entry>

  
  <entry>
    <title>pyenv로 Python 설치하기</title>
    <link href="https://minn727.github.io/posts/pyenv%EB%A1%9C-Python-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="pyenv로 Python 설치하기" />
    <published>2024-09-14T00:00:00+09:00</published>
  
    <updated>2024-09-14T14:29:48+09:00</updated>
  
    <id>https://minn727.github.io/posts/pyenv%EB%A1%9C-Python-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</id>
    <content src="https://minn727.github.io/posts/pyenv%EB%A1%9C-Python-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" />
    <author>
      <name>Minho Choi</name>
    </author>

  
    
    <category term="개발 환경 설정" />
    
    <category term="Ubuntu" />
    
  

  <summary>1. 개요

pyenv는 다양한 버전의 Python을 쉽게 관리하고 설치할 수 있는 도구입니다. 이를 사용하면 여러 Python 버전을 시스템에 설치하고, 필요에 따라 특정 버전을 활성화할 수 있습니다. 아래는 pyenv를 사용하여 Python을 설치하는 방법을 단계별로 설명합니다.

2. 설치 방법

2.1. 필요한 종속성 설치


  아래의 명령어를 통해 의존성 패키지를 설치합니다.


sudo apt update
sudo apt install -y make build-essential libssl-dev zlib1g-dev \
libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
libncurses5-dev libncursesw5-dev xz-u...</summary>

  </entry>

  
  <entry>
    <title>Jekyll Chirpy 이용하여 블로그 만들기</title>
    <link href="https://minn727.github.io/posts/Jekyll-Chirpy-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/" rel="alternate" type="text/html" title="Jekyll Chirpy 이용하여 블로그 만들기" />
    <published>2024-09-14T00:00:00+09:00</published>
  
    <updated>2024-09-14T17:05:47+09:00</updated>
  
    <id>https://minn727.github.io/posts/Jekyll-Chirpy-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/</id>
    <content src="https://minn727.github.io/posts/Jekyll-Chirpy-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0/" />
    <author>
      <name>Minho Choi</name>
    </author>

  
    
    <category term="GitHub Blog" />
    
  

  <summary>기존에 Markdown 기반 노트 툴인 Obsidian을 사용하고 있었던지라, 블로그 운영에 크게 힘을 들이지 않을 수 있는 GitHub Blog를 플랫폼으로 선택했습니다.

그런데 이게 웬걸… 유명한 Jekyll theme인 Chirpy를 선택해서 블로그를 만드려고 했는데, 쉬울 것으로 예상했지만 예상과 다르게도 수많은 역경과 난관을 거치고 난 뒤에야 블로그 개설을 완료하게 되었습니다. 설치 방법이 나와 있는 블로그마다도 방법이 모두 다르고 필수적으로 수행해야 되는 내용들 또한 파편화 되어있어서 통합 Guideline을 만들고자 하는 마음에 해당 포스트를 작성하게 되었습니다.

제 개발 환경에서의 패키지 버전과 Chirpy 버전은 아래와 같습니다.


  2024.09 기준
  Chirpy: v7.1...</summary>

  </entry>

  
  <entry>
    <title>rbenv로 Ruby 설치하기</title>
    <link href="https://minn727.github.io/posts/rbenv%EB%A1%9C-Ruby-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="rbenv로 Ruby 설치하기" />
    <published>2024-09-13T00:00:00+09:00</published>
  
    <updated>2024-09-14T14:29:48+09:00</updated>
  
    <id>https://minn727.github.io/posts/rbenv%EB%A1%9C-Ruby-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</id>
    <content src="https://minn727.github.io/posts/rbenv%EB%A1%9C-Ruby-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" />
    <author>
      <name>Minho Choi</name>
    </author>

  
    
    <category term="개발 환경 설정" />
    
    <category term="Ubuntu" />
    
  

  <summary>1. 개요

웬만한 패키지같은 경우에는 sudo apt 하나면 만능으로 해결되지만, Ruby의 경우 aptitude로 설치하면 최신 버전이 아닌 3.0 버전까지밖에 설치가 안되더라구요. (저의 경우에 이런 것이라 사용자마다 다를 수 있습니다.) Ruby가 version dependency가 굉장히 심한 언어이다보니 별도의 version manager를 통해서 설치하는 것이 훨씬 편합니다. 기존에 pyenv 등을 사용하시던 분이면 익숙하실거라 생각합니다.

Ruby의 version manager에는 크게


  rvm
  rbenv


이렇게 2가지가 있는데 rbenv가 가볍다보니 많은 사람들이 해당 유틸리티를 사용하고 있습니다. 본 포스트에서는 rbenv로 알맞은 버전의 Ruby를 설치하는 방법을 알려...</summary>

  </entry>

  
  <entry>
    <title>nvm으로 node 설치하기</title>
    <link href="https://minn727.github.io/posts/nvm%EC%9C%BC%EB%A1%9C-node-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" rel="alternate" type="text/html" title="nvm으로 node 설치하기" />
    <published>2024-09-13T00:00:00+09:00</published>
  
    <updated>2024-09-14T14:29:48+09:00</updated>
  
    <id>https://minn727.github.io/posts/nvm%EC%9C%BC%EB%A1%9C-node-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/</id>
    <content src="https://minn727.github.io/posts/nvm%EC%9C%BC%EB%A1%9C-node-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0/" />
    <author>
      <name>Minho Choi</name>
    </author>

  
    
    <category term="개발 환경 설정" />
    
    <category term="Ubuntu" />
    
  

  <summary>1. 개요

nvm이란 Node Version Manager의 약자로, Node.js의 버전을 관리하는 도구입니다. 보통 이러한 버전 관리자는 여러 프로젝트에서 다른 버전을 요구할 때 사용함으로써 패키지의 버전을 쉽게 설정하고 전환할 수 있습니다.

2. 설치 방법

2.1. Node.js 버전 관리 도구(nvm) 설치

# nvm 설치 스크립트 실행
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash


2.2. nvm 설치 완료 후 설정 파일 적용


  (중요) zsh 쓸 때 기준이므로 기본 shell 쓰시는 분들은 환경 변수를 ~/.bashrc 에 설정해야 합니다.


echo &amp;#39;export NVM_DIR...</summary>

  </entry>

</feed>


